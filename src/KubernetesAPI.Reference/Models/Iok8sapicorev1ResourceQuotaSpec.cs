// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Kubeleans.KubernetesApi.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// ResourceQuotaSpec defines the desired hard limits to enforce for Quota.
    /// </summary>
    public partial class Iok8sapicorev1ResourceQuotaSpec
    {
        /// <summary>
        /// Initializes a new instance of the Iok8sapicorev1ResourceQuotaSpec
        /// class.
        /// </summary>
        public Iok8sapicorev1ResourceQuotaSpec()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Iok8sapicorev1ResourceQuotaSpec
        /// class.
        /// </summary>
        /// <param name="hard">Hard is the set of desired hard limits for each
        /// named resource. More info:
        /// https://kubernetes.io/docs/concepts/policy/resource-quotas/</param>
        /// <param name="scopes">A collection of filters that must match each
        /// object tracked by a quota. If not specified, the quota matches all
        /// objects.</param>
        public Iok8sapicorev1ResourceQuotaSpec(IDictionary<string, string> hard = default(IDictionary<string, string>), IList<string> scopes = default(IList<string>))
        {
            Hard = hard;
            Scopes = scopes;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets hard is the set of desired hard limits for each named
        /// resource. More info:
        /// https://kubernetes.io/docs/concepts/policy/resource-quotas/
        /// </summary>
        [JsonProperty(PropertyName = "hard")]
        public IDictionary<string, string> Hard { get; set; }

        /// <summary>
        /// Gets or sets a collection of filters that must match each object
        /// tracked by a quota. If not specified, the quota matches all
        /// objects.
        /// </summary>
        [JsonProperty(PropertyName = "scopes")]
        public IList<string> Scopes { get; set; }

    }
}
